import (
	"golang.org/lsptests/overload/a"
	"golang.org/lsptests/overload/b"
	"golang.org/lsptests/overload/c"
	"golang.org/lsptests/overload/d"
)

Demo          //@godef("Demo",Demo__0)
Demo 100      //@godef("Demo",Demo__1)
Demo 100, 200 //@godef("Demo",Demo__2)
Demo "hello"  //@godef("Demo",Demo__3)

var n N
n.add 100     //@godef("add",Add__0)
n.add "hello" //@godef("add",Add__1)

a.demo          //@godef("demo",a_demo__0)
a.demo 100      //@godef("demo",a_demo__1)
a.demo 100, 200 //@godef("demo",a_demo__2)
a.demo "hello"  //@godef("demo",a_demo__3)

var n1 a.N
n1.add 100     //@godef("add",a_add__0)
n1.add "hello" //@godef("add",a_add__1)

b.gopDemo       //@godef("gopDemo",b_gopdemo)
b.demo          //@godef("demo",b_demo__0)
b.demo 100      //@godef("demo",b_demo__1)
b.demo 100, 200 //@godef("demo",b_demo__2)
b.demo "hello"  //@godef("demo",b_demo__3)

var n2 b.N
n2.add 100     //@godef("add",b_add__0)
n2.add "hello" //@godef("add",b_add__1)

c.mul 100, 200   //@godef("mul",c_mulInt)
c.mul 100.1, 200 //@godef("mul",c_mulFloat)

c.add 100, 200
c.add "hello", "world"

var foo c.Foo
foo.mul 100        //@godef("mul",c_foo_mulInt)
foo.mul new(c.Foo) //@godef("mul",c_foo_mulFoo)

d.mul 100, 200   //@godef("mul",d_mulInt)
d.mul 100.1, 200 //@godef("mul",d_mulFloat)

d.add 100, 200         //@godef("add",d_add__0)
d.add "hello", "world" //@godef("add",d_add__1)

var foo2 d.Foo
foo2.mul 100        //@godef("mul",d_foo_mulInt)
foo2.mul new(d.Foo) //@godef("mul",d_foo_mulFoo)
